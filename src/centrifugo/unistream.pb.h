// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: unistream.proto
// Protobuf C++ Version: 5.29.5

#ifndef unistream_2eproto_2epb_2eh
#define unistream_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_unistream_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_unistream_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_unistream_2eproto;
namespace centrifugal {
namespace centrifugo {
namespace unistream {
class ClientInfo;
struct ClientInfoDefaultTypeInternal;
extern ClientInfoDefaultTypeInternal _ClientInfo_default_instance_;
class Connect;
struct ConnectDefaultTypeInternal;
extern ConnectDefaultTypeInternal _Connect_default_instance_;
class ConnectRequest;
struct ConnectRequestDefaultTypeInternal;
extern ConnectRequestDefaultTypeInternal _ConnectRequest_default_instance_;
class ConnectRequest_HeadersEntry_DoNotUse;
struct ConnectRequest_HeadersEntry_DoNotUseDefaultTypeInternal;
extern ConnectRequest_HeadersEntry_DoNotUseDefaultTypeInternal _ConnectRequest_HeadersEntry_DoNotUse_default_instance_;
class ConnectRequest_SubsEntry_DoNotUse;
struct ConnectRequest_SubsEntry_DoNotUseDefaultTypeInternal;
extern ConnectRequest_SubsEntry_DoNotUseDefaultTypeInternal _ConnectRequest_SubsEntry_DoNotUse_default_instance_;
class Connect_SubsEntry_DoNotUse;
struct Connect_SubsEntry_DoNotUseDefaultTypeInternal;
extern Connect_SubsEntry_DoNotUseDefaultTypeInternal _Connect_SubsEntry_DoNotUse_default_instance_;
class Disconnect;
struct DisconnectDefaultTypeInternal;
extern DisconnectDefaultTypeInternal _Disconnect_default_instance_;
class Join;
struct JoinDefaultTypeInternal;
extern JoinDefaultTypeInternal _Join_default_instance_;
class Leave;
struct LeaveDefaultTypeInternal;
extern LeaveDefaultTypeInternal _Leave_default_instance_;
class Message;
struct MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Publication;
struct PublicationDefaultTypeInternal;
extern PublicationDefaultTypeInternal _Publication_default_instance_;
class Publication_TagsEntry_DoNotUse;
struct Publication_TagsEntry_DoNotUseDefaultTypeInternal;
extern Publication_TagsEntry_DoNotUseDefaultTypeInternal _Publication_TagsEntry_DoNotUse_default_instance_;
class Push;
struct PushDefaultTypeInternal;
extern PushDefaultTypeInternal _Push_default_instance_;
class Refresh;
struct RefreshDefaultTypeInternal;
extern RefreshDefaultTypeInternal _Refresh_default_instance_;
class Subscribe;
struct SubscribeDefaultTypeInternal;
extern SubscribeDefaultTypeInternal _Subscribe_default_instance_;
class SubscribeRequest;
struct SubscribeRequestDefaultTypeInternal;
extern SubscribeRequestDefaultTypeInternal _SubscribeRequest_default_instance_;
class SubscribeResult;
struct SubscribeResultDefaultTypeInternal;
extern SubscribeResultDefaultTypeInternal _SubscribeResult_default_instance_;
class Unsubscribe;
struct UnsubscribeDefaultTypeInternal;
extern UnsubscribeDefaultTypeInternal _Unsubscribe_default_instance_;
}  // namespace unistream
}  // namespace centrifugo
}  // namespace centrifugal
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace centrifugal {
namespace centrifugo {
namespace unistream {

// ===================================================================


// -------------------------------------------------------------------

class Unsubscribe final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.Unsubscribe) */ {
 public:
  inline Unsubscribe() : Unsubscribe(nullptr) {}
  ~Unsubscribe() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Unsubscribe* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Unsubscribe));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Unsubscribe(
      ::google::protobuf::internal::ConstantInitialized);

  inline Unsubscribe(const Unsubscribe& from) : Unsubscribe(nullptr, from) {}
  inline Unsubscribe(Unsubscribe&& from) noexcept
      : Unsubscribe(nullptr, std::move(from)) {}
  inline Unsubscribe& operator=(const Unsubscribe& from) {
    CopyFrom(from);
    return *this;
  }
  inline Unsubscribe& operator=(Unsubscribe&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Unsubscribe& default_instance() {
    return *internal_default_instance();
  }
  static inline const Unsubscribe* internal_default_instance() {
    return reinterpret_cast<const Unsubscribe*>(
        &_Unsubscribe_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(Unsubscribe& a, Unsubscribe& b) { a.Swap(&b); }
  inline void Swap(Unsubscribe* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Unsubscribe* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Unsubscribe* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Unsubscribe>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Unsubscribe& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Unsubscribe& from) { Unsubscribe::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Unsubscribe* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.Unsubscribe"; }

 protected:
  explicit Unsubscribe(::google::protobuf::Arena* arena);
  Unsubscribe(::google::protobuf::Arena* arena, const Unsubscribe& from);
  Unsubscribe(::google::protobuf::Arena* arena, Unsubscribe&& from) noexcept
      : Unsubscribe(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReasonFieldNumber = 3,
    kCodeFieldNumber = 2,
  };
  // string reason = 3;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // uint32 code = 2;
  void clear_code() ;
  ::uint32_t code() const;
  void set_code(::uint32_t value);

  private:
  ::uint32_t _internal_code() const;
  void _internal_set_code(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.Unsubscribe)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Unsubscribe& from_msg);
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::uint32_t code_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class SubscribeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.SubscribeRequest) */ {
 public:
  inline SubscribeRequest() : SubscribeRequest(nullptr) {}
  ~SubscribeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeRequest(const SubscribeRequest& from) : SubscribeRequest(nullptr, from) {}
  inline SubscribeRequest(SubscribeRequest&& from) noexcept
      : SubscribeRequest(nullptr, std::move(from)) {}
  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeRequest& operator=(SubscribeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeRequest*>(
        &_SubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SubscribeRequest& a, SubscribeRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeRequest& from) { SubscribeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.SubscribeRequest"; }

 protected:
  explicit SubscribeRequest(::google::protobuf::Arena* arena);
  SubscribeRequest(::google::protobuf::Arena* arena, const SubscribeRequest& from);
  SubscribeRequest(::google::protobuf::Arena* arena, SubscribeRequest&& from) noexcept
      : SubscribeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEpochFieldNumber = 6,
    kOffsetFieldNumber = 7,
    kRecoverFieldNumber = 3,
  };
  // string epoch = 6;
  void clear_epoch() ;
  const std::string& epoch() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_epoch(Arg_&& arg, Args_... args);
  std::string* mutable_epoch();
  PROTOBUF_NODISCARD std::string* release_epoch();
  void set_allocated_epoch(std::string* value);

  private:
  const std::string& _internal_epoch() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_epoch(
      const std::string& value);
  std::string* _internal_mutable_epoch();

  public:
  // uint64 offset = 7;
  void clear_offset() ;
  ::uint64_t offset() const;
  void set_offset(::uint64_t value);

  private:
  ::uint64_t _internal_offset() const;
  void _internal_set_offset(::uint64_t value);

  public:
  // bool recover = 3;
  void clear_recover() ;
  bool recover() const;
  void set_recover(bool value);

  private:
  bool _internal_recover() const;
  void _internal_set_recover(bool value);

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.SubscribeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 0,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr epoch_;
    ::uint64_t offset_;
    bool recover_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class Subscribe final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.Subscribe) */ {
 public:
  inline Subscribe() : Subscribe(nullptr) {}
  ~Subscribe() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Subscribe* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Subscribe));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Subscribe(
      ::google::protobuf::internal::ConstantInitialized);

  inline Subscribe(const Subscribe& from) : Subscribe(nullptr, from) {}
  inline Subscribe(Subscribe&& from) noexcept
      : Subscribe(nullptr, std::move(from)) {}
  inline Subscribe& operator=(const Subscribe& from) {
    CopyFrom(from);
    return *this;
  }
  inline Subscribe& operator=(Subscribe&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Subscribe& default_instance() {
    return *internal_default_instance();
  }
  static inline const Subscribe* internal_default_instance() {
    return reinterpret_cast<const Subscribe*>(
        &_Subscribe_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(Subscribe& a, Subscribe& b) { a.Swap(&b); }
  inline void Swap(Subscribe* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Subscribe* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Subscribe* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Subscribe>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Subscribe& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Subscribe& from) { Subscribe::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Subscribe* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.Subscribe"; }

 protected:
  explicit Subscribe(::google::protobuf::Arena* arena);
  Subscribe(::google::protobuf::Arena* arena, const Subscribe& from);
  Subscribe(::google::protobuf::Arena* arena, Subscribe&& from) noexcept
      : Subscribe(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEpochFieldNumber = 4,
    kDataFieldNumber = 7,
    kOffsetFieldNumber = 5,
    kRecoverableFieldNumber = 1,
    kPositionedFieldNumber = 6,
  };
  // string epoch = 4;
  void clear_epoch() ;
  const std::string& epoch() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_epoch(Arg_&& arg, Args_... args);
  std::string* mutable_epoch();
  PROTOBUF_NODISCARD std::string* release_epoch();
  void set_allocated_epoch(std::string* value);

  private:
  const std::string& _internal_epoch() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_epoch(
      const std::string& value);
  std::string* _internal_mutable_epoch();

  public:
  // bytes data = 7;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint64 offset = 5;
  void clear_offset() ;
  ::uint64_t offset() const;
  void set_offset(::uint64_t value);

  private:
  ::uint64_t _internal_offset() const;
  void _internal_set_offset(::uint64_t value);

  public:
  // bool recoverable = 1;
  void clear_recoverable() ;
  bool recoverable() const;
  void set_recoverable(bool value);

  private:
  bool _internal_recoverable() const;
  void _internal_set_recoverable(bool value);

  public:
  // bool positioned = 6;
  void clear_positioned() ;
  bool positioned() const;
  void set_positioned(bool value);

  private:
  bool _internal_positioned() const;
  void _internal_set_positioned(bool value);

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.Subscribe)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Subscribe& from_msg);
    ::google::protobuf::internal::ArenaStringPtr epoch_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint64_t offset_;
    bool recoverable_;
    bool positioned_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class Refresh final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.Refresh) */ {
 public:
  inline Refresh() : Refresh(nullptr) {}
  ~Refresh() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Refresh* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Refresh));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Refresh(
      ::google::protobuf::internal::ConstantInitialized);

  inline Refresh(const Refresh& from) : Refresh(nullptr, from) {}
  inline Refresh(Refresh&& from) noexcept
      : Refresh(nullptr, std::move(from)) {}
  inline Refresh& operator=(const Refresh& from) {
    CopyFrom(from);
    return *this;
  }
  inline Refresh& operator=(Refresh&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Refresh& default_instance() {
    return *internal_default_instance();
  }
  static inline const Refresh* internal_default_instance() {
    return reinterpret_cast<const Refresh*>(
        &_Refresh_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(Refresh& a, Refresh& b) { a.Swap(&b); }
  inline void Swap(Refresh* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Refresh* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Refresh* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Refresh>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Refresh& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Refresh& from) { Refresh::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Refresh* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.Refresh"; }

 protected:
  explicit Refresh(::google::protobuf::Arena* arena);
  Refresh(::google::protobuf::Arena* arena, const Refresh& from);
  Refresh(::google::protobuf::Arena* arena, Refresh&& from) noexcept
      : Refresh(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExpiresFieldNumber = 1,
    kTtlFieldNumber = 2,
  };
  // bool expires = 1;
  void clear_expires() ;
  bool expires() const;
  void set_expires(bool value);

  private:
  bool _internal_expires() const;
  void _internal_set_expires(bool value);

  public:
  // uint32 ttl = 2;
  void clear_ttl() ;
  ::uint32_t ttl() const;
  void set_ttl(::uint32_t value);

  private:
  ::uint32_t _internal_ttl() const;
  void _internal_set_ttl(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.Refresh)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Refresh& from_msg);
    bool expires_;
    ::uint32_t ttl_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class Publication_TagsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Publication_TagsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Publication_TagsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Publication_TagsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Publication_TagsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Publication_TagsEntry_DoNotUse*>(
        &_Publication_TagsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_unistream_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      71, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Message final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.Message) */ {
 public:
  inline Message() : Message(nullptr) {}
  ~Message() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Message* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Message));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message(const Message& from) : Message(nullptr, from) {}
  inline Message(Message&& from) noexcept
      : Message(nullptr, std::move(from)) {}
  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message& operator=(Message&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
        &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(Message& a, Message& b) { a.Swap(&b); }
  inline void Swap(Message* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Message>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message& from) { Message::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Message* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.Message"; }

 protected:
  explicit Message(::google::protobuf::Arena* arena);
  Message(::google::protobuf::Arena* arena, const Message& from);
  Message(::google::protobuf::Arena* arena, Message&& from) noexcept
      : Message(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.Message)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Message& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class Disconnect final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.Disconnect) */ {
 public:
  inline Disconnect() : Disconnect(nullptr) {}
  ~Disconnect() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Disconnect* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Disconnect));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Disconnect(
      ::google::protobuf::internal::ConstantInitialized);

  inline Disconnect(const Disconnect& from) : Disconnect(nullptr, from) {}
  inline Disconnect(Disconnect&& from) noexcept
      : Disconnect(nullptr, std::move(from)) {}
  inline Disconnect& operator=(const Disconnect& from) {
    CopyFrom(from);
    return *this;
  }
  inline Disconnect& operator=(Disconnect&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Disconnect& default_instance() {
    return *internal_default_instance();
  }
  static inline const Disconnect* internal_default_instance() {
    return reinterpret_cast<const Disconnect*>(
        &_Disconnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(Disconnect& a, Disconnect& b) { a.Swap(&b); }
  inline void Swap(Disconnect* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Disconnect* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Disconnect* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Disconnect>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Disconnect& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Disconnect& from) { Disconnect::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Disconnect* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.Disconnect"; }

 protected:
  explicit Disconnect(::google::protobuf::Arena* arena);
  Disconnect(::google::protobuf::Arena* arena, const Disconnect& from);
  Disconnect(::google::protobuf::Arena* arena, Disconnect&& from) noexcept
      : Disconnect(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReasonFieldNumber = 2,
    kCodeFieldNumber = 1,
    kReconnectFieldNumber = 3,
  };
  // string reason = 2;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // uint32 code = 1;
  void clear_code() ;
  ::uint32_t code() const;
  void set_code(::uint32_t value);

  private:
  ::uint32_t _internal_code() const;
  void _internal_set_code(::uint32_t value);

  public:
  // bool reconnect = 3;
  void clear_reconnect() ;
  bool reconnect() const;
  void set_reconnect(bool value);

  private:
  bool _internal_reconnect() const;
  void _internal_set_reconnect(bool value);

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.Disconnect)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Disconnect& from_msg);
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::uint32_t code_;
    bool reconnect_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class ConnectRequest_HeadersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ConnectRequest_HeadersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectRequest_HeadersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ConnectRequest_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ConnectRequest_HeadersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ConnectRequest_HeadersEntry_DoNotUse*>(
        &_ConnectRequest_HeadersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_unistream_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      77, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ClientInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.ClientInfo) */ {
 public:
  inline ClientInfo() : ClientInfo(nullptr) {}
  ~ClientInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClientInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClientInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClientInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClientInfo(const ClientInfo& from) : ClientInfo(nullptr, from) {}
  inline ClientInfo(ClientInfo&& from) noexcept
      : ClientInfo(nullptr, std::move(from)) {}
  inline ClientInfo& operator=(const ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientInfo& operator=(ClientInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientInfo* internal_default_instance() {
    return reinterpret_cast<const ClientInfo*>(
        &_ClientInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ClientInfo& a, ClientInfo& b) { a.Swap(&b); }
  inline void Swap(ClientInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClientInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClientInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClientInfo& from) { ClientInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClientInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.ClientInfo"; }

 protected:
  explicit ClientInfo(::google::protobuf::Arena* arena);
  ClientInfo(::google::protobuf::Arena* arena, const ClientInfo& from);
  ClientInfo(::google::protobuf::Arena* arena, ClientInfo&& from) noexcept
      : ClientInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserFieldNumber = 1,
    kClientFieldNumber = 2,
    kConnInfoFieldNumber = 3,
    kChanInfoFieldNumber = 4,
  };
  // string user = 1;
  void clear_user() ;
  const std::string& user() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user(Arg_&& arg, Args_... args);
  std::string* mutable_user();
  PROTOBUF_NODISCARD std::string* release_user();
  void set_allocated_user(std::string* value);

  private:
  const std::string& _internal_user() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user(
      const std::string& value);
  std::string* _internal_mutable_user();

  public:
  // string client = 2;
  void clear_client() ;
  const std::string& client() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client(Arg_&& arg, Args_... args);
  std::string* mutable_client();
  PROTOBUF_NODISCARD std::string* release_client();
  void set_allocated_client(std::string* value);

  private:
  const std::string& _internal_client() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client(
      const std::string& value);
  std::string* _internal_mutable_client();

  public:
  // bytes conn_info = 3;
  void clear_conn_info() ;
  const std::string& conn_info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_conn_info(Arg_&& arg, Args_... args);
  std::string* mutable_conn_info();
  PROTOBUF_NODISCARD std::string* release_conn_info();
  void set_allocated_conn_info(std::string* value);

  private:
  const std::string& _internal_conn_info() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conn_info(
      const std::string& value);
  std::string* _internal_mutable_conn_info();

  public:
  // bytes chan_info = 4;
  void clear_chan_info() ;
  const std::string& chan_info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_chan_info(Arg_&& arg, Args_... args);
  std::string* mutable_chan_info();
  PROTOBUF_NODISCARD std::string* release_chan_info();
  void set_allocated_chan_info(std::string* value);

  private:
  const std::string& _internal_chan_info() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chan_info(
      const std::string& value);
  std::string* _internal_mutable_chan_info();

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.ClientInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      62, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClientInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr user_;
    ::google::protobuf::internal::ArenaStringPtr client_;
    ::google::protobuf::internal::ArenaStringPtr conn_info_;
    ::google::protobuf::internal::ArenaStringPtr chan_info_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class Publication final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.Publication) */ {
 public:
  inline Publication() : Publication(nullptr) {}
  ~Publication() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Publication* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Publication));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Publication(
      ::google::protobuf::internal::ConstantInitialized);

  inline Publication(const Publication& from) : Publication(nullptr, from) {}
  inline Publication(Publication&& from) noexcept
      : Publication(nullptr, std::move(from)) {}
  inline Publication& operator=(const Publication& from) {
    CopyFrom(from);
    return *this;
  }
  inline Publication& operator=(Publication&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Publication& default_instance() {
    return *internal_default_instance();
  }
  static inline const Publication* internal_default_instance() {
    return reinterpret_cast<const Publication*>(
        &_Publication_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(Publication& a, Publication& b) { a.Swap(&b); }
  inline void Swap(Publication* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Publication* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Publication* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Publication>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Publication& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Publication& from) { Publication::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Publication* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.Publication"; }

 protected:
  explicit Publication(::google::protobuf::Arena* arena);
  Publication(::google::protobuf::Arena* arena, const Publication& from);
  Publication(::google::protobuf::Arena* arena, Publication&& from) noexcept
      : Publication(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTagsFieldNumber = 7,
    kDataFieldNumber = 4,
    kInfoFieldNumber = 5,
    kOffsetFieldNumber = 6,
  };
  // map<string, string> tags = 7;
  int tags_size() const;
  private:
  int _internal_tags_size() const;

  public:
  void clear_tags() ;
  const ::google::protobuf::Map<std::string, std::string>& tags() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_tags();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_tags() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_tags();

  public:
  // bytes data = 4;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // .centrifugal.centrifugo.unistream.ClientInfo info = 5;
  bool has_info() const;
  void clear_info() ;
  const ::centrifugal::centrifugo::unistream::ClientInfo& info() const;
  PROTOBUF_NODISCARD ::centrifugal::centrifugo::unistream::ClientInfo* release_info();
  ::centrifugal::centrifugo::unistream::ClientInfo* mutable_info();
  void set_allocated_info(::centrifugal::centrifugo::unistream::ClientInfo* value);
  void unsafe_arena_set_allocated_info(::centrifugal::centrifugo::unistream::ClientInfo* value);
  ::centrifugal::centrifugo::unistream::ClientInfo* unsafe_arena_release_info();

  private:
  const ::centrifugal::centrifugo::unistream::ClientInfo& _internal_info() const;
  ::centrifugal::centrifugo::unistream::ClientInfo* _internal_mutable_info();

  public:
  // uint64 offset = 6;
  void clear_offset() ;
  ::uint64_t offset() const;
  void set_offset(::uint64_t value);

  private:
  ::uint64_t _internal_offset() const;
  void _internal_set_offset(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.Publication)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Publication& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<Publication_TagsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        tags_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::centrifugal::centrifugo::unistream::ClientInfo* info_;
    ::uint64_t offset_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class Leave final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.Leave) */ {
 public:
  inline Leave() : Leave(nullptr) {}
  ~Leave() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Leave* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Leave));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Leave(
      ::google::protobuf::internal::ConstantInitialized);

  inline Leave(const Leave& from) : Leave(nullptr, from) {}
  inline Leave(Leave&& from) noexcept
      : Leave(nullptr, std::move(from)) {}
  inline Leave& operator=(const Leave& from) {
    CopyFrom(from);
    return *this;
  }
  inline Leave& operator=(Leave&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Leave& default_instance() {
    return *internal_default_instance();
  }
  static inline const Leave* internal_default_instance() {
    return reinterpret_cast<const Leave*>(
        &_Leave_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Leave& a, Leave& b) { a.Swap(&b); }
  inline void Swap(Leave* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Leave* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Leave* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Leave>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Leave& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Leave& from) { Leave::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Leave* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.Leave"; }

 protected:
  explicit Leave(::google::protobuf::Arena* arena);
  Leave(::google::protobuf::Arena* arena, const Leave& from);
  Leave(::google::protobuf::Arena* arena, Leave&& from) noexcept
      : Leave(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfoFieldNumber = 1,
  };
  // .centrifugal.centrifugo.unistream.ClientInfo info = 1;
  bool has_info() const;
  void clear_info() ;
  const ::centrifugal::centrifugo::unistream::ClientInfo& info() const;
  PROTOBUF_NODISCARD ::centrifugal::centrifugo::unistream::ClientInfo* release_info();
  ::centrifugal::centrifugo::unistream::ClientInfo* mutable_info();
  void set_allocated_info(::centrifugal::centrifugo::unistream::ClientInfo* value);
  void unsafe_arena_set_allocated_info(::centrifugal::centrifugo::unistream::ClientInfo* value);
  ::centrifugal::centrifugo::unistream::ClientInfo* unsafe_arena_release_info();

  private:
  const ::centrifugal::centrifugo::unistream::ClientInfo& _internal_info() const;
  ::centrifugal::centrifugo::unistream::ClientInfo* _internal_mutable_info();

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.Leave)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Leave& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::centrifugal::centrifugo::unistream::ClientInfo* info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class Join final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.Join) */ {
 public:
  inline Join() : Join(nullptr) {}
  ~Join() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Join* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Join));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Join(
      ::google::protobuf::internal::ConstantInitialized);

  inline Join(const Join& from) : Join(nullptr, from) {}
  inline Join(Join&& from) noexcept
      : Join(nullptr, std::move(from)) {}
  inline Join& operator=(const Join& from) {
    CopyFrom(from);
    return *this;
  }
  inline Join& operator=(Join&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Join& default_instance() {
    return *internal_default_instance();
  }
  static inline const Join* internal_default_instance() {
    return reinterpret_cast<const Join*>(
        &_Join_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(Join& a, Join& b) { a.Swap(&b); }
  inline void Swap(Join* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Join* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Join* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Join>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Join& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Join& from) { Join::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Join* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.Join"; }

 protected:
  explicit Join(::google::protobuf::Arena* arena);
  Join(::google::protobuf::Arena* arena, const Join& from);
  Join(::google::protobuf::Arena* arena, Join&& from) noexcept
      : Join(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfoFieldNumber = 1,
  };
  // .centrifugal.centrifugo.unistream.ClientInfo info = 1;
  bool has_info() const;
  void clear_info() ;
  const ::centrifugal::centrifugo::unistream::ClientInfo& info() const;
  PROTOBUF_NODISCARD ::centrifugal::centrifugo::unistream::ClientInfo* release_info();
  ::centrifugal::centrifugo::unistream::ClientInfo* mutable_info();
  void set_allocated_info(::centrifugal::centrifugo::unistream::ClientInfo* value);
  void unsafe_arena_set_allocated_info(::centrifugal::centrifugo::unistream::ClientInfo* value);
  ::centrifugal::centrifugo::unistream::ClientInfo* unsafe_arena_release_info();

  private:
  const ::centrifugal::centrifugo::unistream::ClientInfo& _internal_info() const;
  ::centrifugal::centrifugo::unistream::ClientInfo* _internal_mutable_info();

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.Join)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Join& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::centrifugal::centrifugo::unistream::ClientInfo* info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class ConnectRequest_SubsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ConnectRequest_SubsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectRequest_SubsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ConnectRequest_SubsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ConnectRequest_SubsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ConnectRequest_SubsEntry_DoNotUse*>(
        &_ConnectRequest_SubsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_unistream_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      69, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class SubscribeResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.SubscribeResult) */ {
 public:
  inline SubscribeResult() : SubscribeResult(nullptr) {}
  ~SubscribeResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeResult(const SubscribeResult& from) : SubscribeResult(nullptr, from) {}
  inline SubscribeResult(SubscribeResult&& from) noexcept
      : SubscribeResult(nullptr, std::move(from)) {}
  inline SubscribeResult& operator=(const SubscribeResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeResult& operator=(SubscribeResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeResult* internal_default_instance() {
    return reinterpret_cast<const SubscribeResult*>(
        &_SubscribeResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(SubscribeResult& a, SubscribeResult& b) { a.Swap(&b); }
  inline void Swap(SubscribeResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeResult& from) { SubscribeResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.SubscribeResult"; }

 protected:
  explicit SubscribeResult(::google::protobuf::Arena* arena);
  SubscribeResult(::google::protobuf::Arena* arena, const SubscribeResult& from);
  SubscribeResult(::google::protobuf::Arena* arena, SubscribeResult&& from) noexcept
      : SubscribeResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPublicationsFieldNumber = 7,
    kEpochFieldNumber = 6,
    kDataFieldNumber = 11,
    kTtlFieldNumber = 2,
    kExpiresFieldNumber = 1,
    kRecoverableFieldNumber = 3,
    kRecoveredFieldNumber = 8,
    kPositionedFieldNumber = 10,
    kOffsetFieldNumber = 9,
    kWasRecoveringFieldNumber = 12,
  };
  // repeated .centrifugal.centrifugo.unistream.Publication publications = 7;
  int publications_size() const;
  private:
  int _internal_publications_size() const;

  public:
  void clear_publications() ;
  ::centrifugal::centrifugo::unistream::Publication* mutable_publications(int index);
  ::google::protobuf::RepeatedPtrField<::centrifugal::centrifugo::unistream::Publication>* mutable_publications();

  private:
  const ::google::protobuf::RepeatedPtrField<::centrifugal::centrifugo::unistream::Publication>& _internal_publications() const;
  ::google::protobuf::RepeatedPtrField<::centrifugal::centrifugo::unistream::Publication>* _internal_mutable_publications();
  public:
  const ::centrifugal::centrifugo::unistream::Publication& publications(int index) const;
  ::centrifugal::centrifugo::unistream::Publication* add_publications();
  const ::google::protobuf::RepeatedPtrField<::centrifugal::centrifugo::unistream::Publication>& publications() const;
  // string epoch = 6;
  void clear_epoch() ;
  const std::string& epoch() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_epoch(Arg_&& arg, Args_... args);
  std::string* mutable_epoch();
  PROTOBUF_NODISCARD std::string* release_epoch();
  void set_allocated_epoch(std::string* value);

  private:
  const std::string& _internal_epoch() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_epoch(
      const std::string& value);
  std::string* _internal_mutable_epoch();

  public:
  // bytes data = 11;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint32 ttl = 2;
  void clear_ttl() ;
  ::uint32_t ttl() const;
  void set_ttl(::uint32_t value);

  private:
  ::uint32_t _internal_ttl() const;
  void _internal_set_ttl(::uint32_t value);

  public:
  // bool expires = 1;
  void clear_expires() ;
  bool expires() const;
  void set_expires(bool value);

  private:
  bool _internal_expires() const;
  void _internal_set_expires(bool value);

  public:
  // bool recoverable = 3;
  void clear_recoverable() ;
  bool recoverable() const;
  void set_recoverable(bool value);

  private:
  bool _internal_recoverable() const;
  void _internal_set_recoverable(bool value);

  public:
  // bool recovered = 8;
  void clear_recovered() ;
  bool recovered() const;
  void set_recovered(bool value);

  private:
  bool _internal_recovered() const;
  void _internal_set_recovered(bool value);

  public:
  // bool positioned = 10;
  void clear_positioned() ;
  bool positioned() const;
  void set_positioned(bool value);

  private:
  bool _internal_positioned() const;
  void _internal_set_positioned(bool value);

  public:
  // uint64 offset = 9;
  void clear_offset() ;
  ::uint64_t offset() const;
  void set_offset(::uint64_t value);

  private:
  ::uint64_t _internal_offset() const;
  void _internal_set_offset(::uint64_t value);

  public:
  // bool was_recovering = 12;
  void clear_was_recovering() ;
  bool was_recovering() const;
  void set_was_recovering(bool value);

  private:
  bool _internal_was_recovering() const;
  void _internal_set_was_recovering(bool value);

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.SubscribeResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 1,
      70, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeResult& from_msg);
    ::google::protobuf::RepeatedPtrField< ::centrifugal::centrifugo::unistream::Publication > publications_;
    ::google::protobuf::internal::ArenaStringPtr epoch_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint32_t ttl_;
    bool expires_;
    bool recoverable_;
    bool recovered_;
    bool positioned_;
    ::uint64_t offset_;
    bool was_recovering_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class ConnectRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.ConnectRequest) */ {
 public:
  inline ConnectRequest() : ConnectRequest(nullptr) {}
  ~ConnectRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConnectRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConnectRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConnectRequest(const ConnectRequest& from) : ConnectRequest(nullptr, from) {}
  inline ConnectRequest(ConnectRequest&& from) noexcept
      : ConnectRequest(nullptr, std::move(from)) {}
  inline ConnectRequest& operator=(const ConnectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectRequest& operator=(ConnectRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConnectRequest* internal_default_instance() {
    return reinterpret_cast<const ConnectRequest*>(
        &_ConnectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ConnectRequest& a, ConnectRequest& b) { a.Swap(&b); }
  inline void Swap(ConnectRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConnectRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConnectRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConnectRequest& from) { ConnectRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConnectRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.ConnectRequest"; }

 protected:
  explicit ConnectRequest(::google::protobuf::Arena* arena);
  ConnectRequest(::google::protobuf::Arena* arena, const ConnectRequest& from);
  ConnectRequest(::google::protobuf::Arena* arena, ConnectRequest&& from) noexcept
      : ConnectRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubsFieldNumber = 3,
    kHeadersFieldNumber = 6,
    kTokenFieldNumber = 1,
    kDataFieldNumber = 2,
    kNameFieldNumber = 4,
    kVersionFieldNumber = 5,
  };
  // map<string, .centrifugal.centrifugo.unistream.SubscribeRequest> subs = 3;
  int subs_size() const;
  private:
  int _internal_subs_size() const;

  public:
  void clear_subs() ;
  const ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeRequest>& subs() const;
  ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeRequest>* mutable_subs();

  private:
  const ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeRequest>& _internal_subs() const;
  ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeRequest>* _internal_mutable_subs();

  public:
  // map<string, string> headers = 6;
  int headers_size() const;
  private:
  int _internal_headers_size() const;

  public:
  void clear_headers() ;
  const ::google::protobuf::Map<std::string, std::string>& headers() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_headers();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_headers() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_headers();

  public:
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string name = 4;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string version = 5;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.ConnectRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      83, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConnectRequest& from_msg);
    ::google::protobuf::internal::MapField<ConnectRequest_SubsEntry_DoNotUse, std::string, ::centrifugal::centrifugo::unistream::SubscribeRequest,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        subs_;
    ::google::protobuf::internal::MapField<ConnectRequest_HeadersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        headers_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class Connect_SubsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  Connect_SubsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Connect_SubsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Connect_SubsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Connect_SubsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Connect_SubsEntry_DoNotUse*>(
        &_Connect_SubsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_unistream_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      62, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Connect final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.Connect) */ {
 public:
  inline Connect() : Connect(nullptr) {}
  ~Connect() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Connect* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Connect));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Connect(
      ::google::protobuf::internal::ConstantInitialized);

  inline Connect(const Connect& from) : Connect(nullptr, from) {}
  inline Connect(Connect&& from) noexcept
      : Connect(nullptr, std::move(from)) {}
  inline Connect& operator=(const Connect& from) {
    CopyFrom(from);
    return *this;
  }
  inline Connect& operator=(Connect&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Connect& default_instance() {
    return *internal_default_instance();
  }
  static inline const Connect* internal_default_instance() {
    return reinterpret_cast<const Connect*>(
        &_Connect_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(Connect& a, Connect& b) { a.Swap(&b); }
  inline void Swap(Connect* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Connect* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Connect* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Connect>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Connect& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Connect& from) { Connect::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Connect* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.Connect"; }

 protected:
  explicit Connect(::google::protobuf::Arena* arena);
  Connect(::google::protobuf::Arena* arena, const Connect& from);
  Connect(::google::protobuf::Arena* arena, Connect&& from) noexcept
      : Connect(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubsFieldNumber = 4,
    kClientFieldNumber = 1,
    kVersionFieldNumber = 2,
    kDataFieldNumber = 3,
    kSessionFieldNumber = 9,
    kNodeFieldNumber = 10,
    kTtlFieldNumber = 6,
    kExpiresFieldNumber = 5,
    kPongFieldNumber = 8,
    kPingFieldNumber = 7,
  };
  // map<string, .centrifugal.centrifugo.unistream.SubscribeResult> subs = 4;
  int subs_size() const;
  private:
  int _internal_subs_size() const;

  public:
  void clear_subs() ;
  const ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeResult>& subs() const;
  ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeResult>* mutable_subs();

  private:
  const ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeResult>& _internal_subs() const;
  ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeResult>* _internal_mutable_subs();

  public:
  // string client = 1;
  void clear_client() ;
  const std::string& client() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client(Arg_&& arg, Args_... args);
  std::string* mutable_client();
  PROTOBUF_NODISCARD std::string* release_client();
  void set_allocated_client(std::string* value);

  private:
  const std::string& _internal_client() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client(
      const std::string& value);
  std::string* _internal_mutable_client();

  public:
  // string version = 2;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // bytes data = 3;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string session = 9;
  void clear_session() ;
  const std::string& session() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session(Arg_&& arg, Args_... args);
  std::string* mutable_session();
  PROTOBUF_NODISCARD std::string* release_session();
  void set_allocated_session(std::string* value);

  private:
  const std::string& _internal_session() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session(
      const std::string& value);
  std::string* _internal_mutable_session();

  public:
  // string node = 10;
  void clear_node() ;
  const std::string& node() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node(Arg_&& arg, Args_... args);
  std::string* mutable_node();
  PROTOBUF_NODISCARD std::string* release_node();
  void set_allocated_node(std::string* value);

  private:
  const std::string& _internal_node() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node(
      const std::string& value);
  std::string* _internal_mutable_node();

  public:
  // uint32 ttl = 6;
  void clear_ttl() ;
  ::uint32_t ttl() const;
  void set_ttl(::uint32_t value);

  private:
  ::uint32_t _internal_ttl() const;
  void _internal_set_ttl(::uint32_t value);

  public:
  // bool expires = 5;
  void clear_expires() ;
  bool expires() const;
  void set_expires(bool value);

  private:
  bool _internal_expires() const;
  void _internal_set_expires(bool value);

  public:
  // bool pong = 8;
  void clear_pong() ;
  bool pong() const;
  void set_pong(bool value);

  private:
  bool _internal_pong() const;
  void _internal_set_pong(bool value);

  public:
  // uint32 ping = 7;
  void clear_ping() ;
  ::uint32_t ping() const;
  void set_ping(::uint32_t value);

  private:
  ::uint32_t _internal_ping() const;
  void _internal_set_ping(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.Connect)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 2,
      85, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Connect& from_msg);
    ::google::protobuf::internal::MapField<Connect_SubsEntry_DoNotUse, std::string, ::centrifugal::centrifugo::unistream::SubscribeResult,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        subs_;
    ::google::protobuf::internal::ArenaStringPtr client_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr session_;
    ::google::protobuf::internal::ArenaStringPtr node_;
    ::uint32_t ttl_;
    bool expires_;
    bool pong_;
    ::uint32_t ping_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};
// -------------------------------------------------------------------

class Push final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:centrifugal.centrifugo.unistream.Push) */ {
 public:
  inline Push() : Push(nullptr) {}
  ~Push() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Push* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Push));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Push(
      ::google::protobuf::internal::ConstantInitialized);

  inline Push(const Push& from) : Push(nullptr, from) {}
  inline Push(Push&& from) noexcept
      : Push(nullptr, std::move(from)) {}
  inline Push& operator=(const Push& from) {
    CopyFrom(from);
    return *this;
  }
  inline Push& operator=(Push&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Push& default_instance() {
    return *internal_default_instance();
  }
  static inline const Push* internal_default_instance() {
    return reinterpret_cast<const Push*>(
        &_Push_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Push& a, Push& b) { a.Swap(&b); }
  inline void Swap(Push* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Push* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Push* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Push>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Push& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Push& from) { Push::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Push* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "centrifugal.centrifugo.unistream.Push"; }

 protected:
  explicit Push(::google::protobuf::Arena* arena);
  Push(::google::protobuf::Arena* arena, const Push& from);
  Push(::google::protobuf::Arena* arena, Push&& from) noexcept
      : Push(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelFieldNumber = 2,
    kPubFieldNumber = 4,
    kJoinFieldNumber = 5,
    kLeaveFieldNumber = 6,
    kUnsubscribeFieldNumber = 7,
    kMessageFieldNumber = 8,
    kSubscribeFieldNumber = 9,
    kConnectFieldNumber = 10,
    kDisconnectFieldNumber = 11,
    kRefreshFieldNumber = 12,
  };
  // string channel = 2;
  void clear_channel() ;
  const std::string& channel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel(Arg_&& arg, Args_... args);
  std::string* mutable_channel();
  PROTOBUF_NODISCARD std::string* release_channel();
  void set_allocated_channel(std::string* value);

  private:
  const std::string& _internal_channel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel(
      const std::string& value);
  std::string* _internal_mutable_channel();

  public:
  // .centrifugal.centrifugo.unistream.Publication pub = 4;
  bool has_pub() const;
  void clear_pub() ;
  const ::centrifugal::centrifugo::unistream::Publication& pub() const;
  PROTOBUF_NODISCARD ::centrifugal::centrifugo::unistream::Publication* release_pub();
  ::centrifugal::centrifugo::unistream::Publication* mutable_pub();
  void set_allocated_pub(::centrifugal::centrifugo::unistream::Publication* value);
  void unsafe_arena_set_allocated_pub(::centrifugal::centrifugo::unistream::Publication* value);
  ::centrifugal::centrifugo::unistream::Publication* unsafe_arena_release_pub();

  private:
  const ::centrifugal::centrifugo::unistream::Publication& _internal_pub() const;
  ::centrifugal::centrifugo::unistream::Publication* _internal_mutable_pub();

  public:
  // .centrifugal.centrifugo.unistream.Join join = 5;
  bool has_join() const;
  void clear_join() ;
  const ::centrifugal::centrifugo::unistream::Join& join() const;
  PROTOBUF_NODISCARD ::centrifugal::centrifugo::unistream::Join* release_join();
  ::centrifugal::centrifugo::unistream::Join* mutable_join();
  void set_allocated_join(::centrifugal::centrifugo::unistream::Join* value);
  void unsafe_arena_set_allocated_join(::centrifugal::centrifugo::unistream::Join* value);
  ::centrifugal::centrifugo::unistream::Join* unsafe_arena_release_join();

  private:
  const ::centrifugal::centrifugo::unistream::Join& _internal_join() const;
  ::centrifugal::centrifugo::unistream::Join* _internal_mutable_join();

  public:
  // .centrifugal.centrifugo.unistream.Leave leave = 6;
  bool has_leave() const;
  void clear_leave() ;
  const ::centrifugal::centrifugo::unistream::Leave& leave() const;
  PROTOBUF_NODISCARD ::centrifugal::centrifugo::unistream::Leave* release_leave();
  ::centrifugal::centrifugo::unistream::Leave* mutable_leave();
  void set_allocated_leave(::centrifugal::centrifugo::unistream::Leave* value);
  void unsafe_arena_set_allocated_leave(::centrifugal::centrifugo::unistream::Leave* value);
  ::centrifugal::centrifugo::unistream::Leave* unsafe_arena_release_leave();

  private:
  const ::centrifugal::centrifugo::unistream::Leave& _internal_leave() const;
  ::centrifugal::centrifugo::unistream::Leave* _internal_mutable_leave();

  public:
  // .centrifugal.centrifugo.unistream.Unsubscribe unsubscribe = 7;
  bool has_unsubscribe() const;
  void clear_unsubscribe() ;
  const ::centrifugal::centrifugo::unistream::Unsubscribe& unsubscribe() const;
  PROTOBUF_NODISCARD ::centrifugal::centrifugo::unistream::Unsubscribe* release_unsubscribe();
  ::centrifugal::centrifugo::unistream::Unsubscribe* mutable_unsubscribe();
  void set_allocated_unsubscribe(::centrifugal::centrifugo::unistream::Unsubscribe* value);
  void unsafe_arena_set_allocated_unsubscribe(::centrifugal::centrifugo::unistream::Unsubscribe* value);
  ::centrifugal::centrifugo::unistream::Unsubscribe* unsafe_arena_release_unsubscribe();

  private:
  const ::centrifugal::centrifugo::unistream::Unsubscribe& _internal_unsubscribe() const;
  ::centrifugal::centrifugo::unistream::Unsubscribe* _internal_mutable_unsubscribe();

  public:
  // .centrifugal.centrifugo.unistream.Message message = 8;
  bool has_message() const;
  void clear_message() ;
  const ::centrifugal::centrifugo::unistream::Message& message() const;
  PROTOBUF_NODISCARD ::centrifugal::centrifugo::unistream::Message* release_message();
  ::centrifugal::centrifugo::unistream::Message* mutable_message();
  void set_allocated_message(::centrifugal::centrifugo::unistream::Message* value);
  void unsafe_arena_set_allocated_message(::centrifugal::centrifugo::unistream::Message* value);
  ::centrifugal::centrifugo::unistream::Message* unsafe_arena_release_message();

  private:
  const ::centrifugal::centrifugo::unistream::Message& _internal_message() const;
  ::centrifugal::centrifugo::unistream::Message* _internal_mutable_message();

  public:
  // .centrifugal.centrifugo.unistream.Subscribe subscribe = 9;
  bool has_subscribe() const;
  void clear_subscribe() ;
  const ::centrifugal::centrifugo::unistream::Subscribe& subscribe() const;
  PROTOBUF_NODISCARD ::centrifugal::centrifugo::unistream::Subscribe* release_subscribe();
  ::centrifugal::centrifugo::unistream::Subscribe* mutable_subscribe();
  void set_allocated_subscribe(::centrifugal::centrifugo::unistream::Subscribe* value);
  void unsafe_arena_set_allocated_subscribe(::centrifugal::centrifugo::unistream::Subscribe* value);
  ::centrifugal::centrifugo::unistream::Subscribe* unsafe_arena_release_subscribe();

  private:
  const ::centrifugal::centrifugo::unistream::Subscribe& _internal_subscribe() const;
  ::centrifugal::centrifugo::unistream::Subscribe* _internal_mutable_subscribe();

  public:
  // .centrifugal.centrifugo.unistream.Connect connect = 10;
  bool has_connect() const;
  void clear_connect() ;
  const ::centrifugal::centrifugo::unistream::Connect& connect() const;
  PROTOBUF_NODISCARD ::centrifugal::centrifugo::unistream::Connect* release_connect();
  ::centrifugal::centrifugo::unistream::Connect* mutable_connect();
  void set_allocated_connect(::centrifugal::centrifugo::unistream::Connect* value);
  void unsafe_arena_set_allocated_connect(::centrifugal::centrifugo::unistream::Connect* value);
  ::centrifugal::centrifugo::unistream::Connect* unsafe_arena_release_connect();

  private:
  const ::centrifugal::centrifugo::unistream::Connect& _internal_connect() const;
  ::centrifugal::centrifugo::unistream::Connect* _internal_mutable_connect();

  public:
  // .centrifugal.centrifugo.unistream.Disconnect disconnect = 11;
  bool has_disconnect() const;
  void clear_disconnect() ;
  const ::centrifugal::centrifugo::unistream::Disconnect& disconnect() const;
  PROTOBUF_NODISCARD ::centrifugal::centrifugo::unistream::Disconnect* release_disconnect();
  ::centrifugal::centrifugo::unistream::Disconnect* mutable_disconnect();
  void set_allocated_disconnect(::centrifugal::centrifugo::unistream::Disconnect* value);
  void unsafe_arena_set_allocated_disconnect(::centrifugal::centrifugo::unistream::Disconnect* value);
  ::centrifugal::centrifugo::unistream::Disconnect* unsafe_arena_release_disconnect();

  private:
  const ::centrifugal::centrifugo::unistream::Disconnect& _internal_disconnect() const;
  ::centrifugal::centrifugo::unistream::Disconnect* _internal_mutable_disconnect();

  public:
  // .centrifugal.centrifugo.unistream.Refresh refresh = 12;
  bool has_refresh() const;
  void clear_refresh() ;
  const ::centrifugal::centrifugo::unistream::Refresh& refresh() const;
  PROTOBUF_NODISCARD ::centrifugal::centrifugo::unistream::Refresh* release_refresh();
  ::centrifugal::centrifugo::unistream::Refresh* mutable_refresh();
  void set_allocated_refresh(::centrifugal::centrifugo::unistream::Refresh* value);
  void unsafe_arena_set_allocated_refresh(::centrifugal::centrifugo::unistream::Refresh* value);
  ::centrifugal::centrifugo::unistream::Refresh* unsafe_arena_release_refresh();

  private:
  const ::centrifugal::centrifugo::unistream::Refresh& _internal_refresh() const;
  ::centrifugal::centrifugo::unistream::Refresh* _internal_mutable_refresh();

  public:
  // @@protoc_insertion_point(class_scope:centrifugal.centrifugo.unistream.Push)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 9,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Push& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr channel_;
    ::centrifugal::centrifugo::unistream::Publication* pub_;
    ::centrifugal::centrifugo::unistream::Join* join_;
    ::centrifugal::centrifugo::unistream::Leave* leave_;
    ::centrifugal::centrifugo::unistream::Unsubscribe* unsubscribe_;
    ::centrifugal::centrifugo::unistream::Message* message_;
    ::centrifugal::centrifugo::unistream::Subscribe* subscribe_;
    ::centrifugal::centrifugo::unistream::Connect* connect_;
    ::centrifugal::centrifugo::unistream::Disconnect* disconnect_;
    ::centrifugal::centrifugo::unistream::Refresh* refresh_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unistream_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ConnectRequest

// string token = 1;
inline void ConnectRequest::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& ConnectRequest::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.ConnectRequest.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectRequest::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.ConnectRequest.token)
}
inline std::string* ConnectRequest::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.ConnectRequest.token)
  return _s;
}
inline const std::string& ConnectRequest::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void ConnectRequest::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* ConnectRequest::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* ConnectRequest::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.ConnectRequest.token)
  return _impl_.token_.Release();
}
inline void ConnectRequest::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.ConnectRequest.token)
}

// bytes data = 2;
inline void ConnectRequest::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& ConnectRequest::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.ConnectRequest.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.ConnectRequest.data)
}
inline std::string* ConnectRequest::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.ConnectRequest.data)
  return _s;
}
inline const std::string& ConnectRequest::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void ConnectRequest::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* ConnectRequest::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* ConnectRequest::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.ConnectRequest.data)
  return _impl_.data_.Release();
}
inline void ConnectRequest::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.ConnectRequest.data)
}

// map<string, .centrifugal.centrifugo.unistream.SubscribeRequest> subs = 3;
inline int ConnectRequest::_internal_subs_size() const {
  return _internal_subs().size();
}
inline int ConnectRequest::subs_size() const {
  return _internal_subs_size();
}
inline void ConnectRequest::clear_subs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subs_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeRequest>& ConnectRequest::_internal_subs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subs_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeRequest>& ConnectRequest::subs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:centrifugal.centrifugo.unistream.ConnectRequest.subs)
  return _internal_subs();
}
inline ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeRequest>* ConnectRequest::_internal_mutable_subs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.subs_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeRequest>* ConnectRequest::mutable_subs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:centrifugal.centrifugo.unistream.ConnectRequest.subs)
  return _internal_mutable_subs();
}

// string name = 4;
inline void ConnectRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ConnectRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.ConnectRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.ConnectRequest.name)
}
inline std::string* ConnectRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.ConnectRequest.name)
  return _s;
}
inline const std::string& ConnectRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ConnectRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ConnectRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ConnectRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.ConnectRequest.name)
  return _impl_.name_.Release();
}
inline void ConnectRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.ConnectRequest.name)
}

// string version = 5;
inline void ConnectRequest::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& ConnectRequest::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.ConnectRequest.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectRequest::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.ConnectRequest.version)
}
inline std::string* ConnectRequest::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.ConnectRequest.version)
  return _s;
}
inline const std::string& ConnectRequest::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void ConnectRequest::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* ConnectRequest::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* ConnectRequest::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.ConnectRequest.version)
  return _impl_.version_.Release();
}
inline void ConnectRequest::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.ConnectRequest.version)
}

// map<string, string> headers = 6;
inline int ConnectRequest::_internal_headers_size() const {
  return _internal_headers().size();
}
inline int ConnectRequest::headers_size() const {
  return _internal_headers_size();
}
inline void ConnectRequest::clear_headers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.headers_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConnectRequest::_internal_headers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.headers_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConnectRequest::headers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:centrifugal.centrifugo.unistream.ConnectRequest.headers)
  return _internal_headers();
}
inline ::google::protobuf::Map<std::string, std::string>* ConnectRequest::_internal_mutable_headers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.headers_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ConnectRequest::mutable_headers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:centrifugal.centrifugo.unistream.ConnectRequest.headers)
  return _internal_mutable_headers();
}

// -------------------------------------------------------------------

// SubscribeRequest

// bool recover = 3;
inline void SubscribeRequest::clear_recover() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recover_ = false;
}
inline bool SubscribeRequest::recover() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeRequest.recover)
  return _internal_recover();
}
inline void SubscribeRequest::set_recover(bool value) {
  _internal_set_recover(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.SubscribeRequest.recover)
}
inline bool SubscribeRequest::_internal_recover() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recover_;
}
inline void SubscribeRequest::_internal_set_recover(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recover_ = value;
}

// string epoch = 6;
inline void SubscribeRequest::clear_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_.ClearToEmpty();
}
inline const std::string& SubscribeRequest::epoch() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeRequest.epoch)
  return _internal_epoch();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeRequest::set_epoch(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.SubscribeRequest.epoch)
}
inline std::string* SubscribeRequest::mutable_epoch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_epoch();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.SubscribeRequest.epoch)
  return _s;
}
inline const std::string& SubscribeRequest::_internal_epoch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.epoch_.Get();
}
inline void SubscribeRequest::_internal_set_epoch(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_.Set(value, GetArena());
}
inline std::string* SubscribeRequest::_internal_mutable_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.epoch_.Mutable( GetArena());
}
inline std::string* SubscribeRequest::release_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.SubscribeRequest.epoch)
  return _impl_.epoch_.Release();
}
inline void SubscribeRequest::set_allocated_epoch(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.epoch_.IsDefault()) {
    _impl_.epoch_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.SubscribeRequest.epoch)
}

// uint64 offset = 7;
inline void SubscribeRequest::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeRequest::offset() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeRequest.offset)
  return _internal_offset();
}
inline void SubscribeRequest::set_offset(::uint64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.SubscribeRequest.offset)
}
inline ::uint64_t SubscribeRequest::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void SubscribeRequest::_internal_set_offset(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// -------------------------------------------------------------------

// Push

// string channel = 2;
inline void Push::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.ClearToEmpty();
}
inline const std::string& Push::channel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Push.channel)
  return _internal_channel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Push::set_channel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Push.channel)
}
inline std::string* Push::mutable_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_channel();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Push.channel)
  return _s;
}
inline const std::string& Push::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_.Get();
}
inline void Push::_internal_set_channel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.Set(value, GetArena());
}
inline std::string* Push::_internal_mutable_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channel_.Mutable( GetArena());
}
inline std::string* Push::release_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Push.channel)
  return _impl_.channel_.Release();
}
inline void Push::set_allocated_channel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.channel_.IsDefault()) {
    _impl_.channel_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Push.channel)
}

// .centrifugal.centrifugo.unistream.Publication pub = 4;
inline bool Push::has_pub() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pub_ != nullptr);
  return value;
}
inline void Push::clear_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pub_ != nullptr) _impl_.pub_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::centrifugal::centrifugo::unistream::Publication& Push::_internal_pub() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::centrifugal::centrifugo::unistream::Publication* p = _impl_.pub_;
  return p != nullptr ? *p : reinterpret_cast<const ::centrifugal::centrifugo::unistream::Publication&>(::centrifugal::centrifugo::unistream::_Publication_default_instance_);
}
inline const ::centrifugal::centrifugo::unistream::Publication& Push::pub() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Push.pub)
  return _internal_pub();
}
inline void Push::unsafe_arena_set_allocated_pub(::centrifugal::centrifugo::unistream::Publication* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pub_);
  }
  _impl_.pub_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Publication*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:centrifugal.centrifugo.unistream.Push.pub)
}
inline ::centrifugal::centrifugo::unistream::Publication* Push::release_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::centrifugal::centrifugo::unistream::Publication* released = _impl_.pub_;
  _impl_.pub_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::centrifugal::centrifugo::unistream::Publication* Push::unsafe_arena_release_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Push.pub)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::centrifugal::centrifugo::unistream::Publication* temp = _impl_.pub_;
  _impl_.pub_ = nullptr;
  return temp;
}
inline ::centrifugal::centrifugo::unistream::Publication* Push::_internal_mutable_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pub_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::centrifugal::centrifugo::unistream::Publication>(GetArena());
    _impl_.pub_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Publication*>(p);
  }
  return _impl_.pub_;
}
inline ::centrifugal::centrifugo::unistream::Publication* Push::mutable_pub() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::centrifugal::centrifugo::unistream::Publication* _msg = _internal_mutable_pub();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Push.pub)
  return _msg;
}
inline void Push::set_allocated_pub(::centrifugal::centrifugo::unistream::Publication* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pub_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pub_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Publication*>(value);
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Push.pub)
}

// .centrifugal.centrifugo.unistream.Join join = 5;
inline bool Push::has_join() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.join_ != nullptr);
  return value;
}
inline void Push::clear_join() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.join_ != nullptr) _impl_.join_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::centrifugal::centrifugo::unistream::Join& Push::_internal_join() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::centrifugal::centrifugo::unistream::Join* p = _impl_.join_;
  return p != nullptr ? *p : reinterpret_cast<const ::centrifugal::centrifugo::unistream::Join&>(::centrifugal::centrifugo::unistream::_Join_default_instance_);
}
inline const ::centrifugal::centrifugo::unistream::Join& Push::join() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Push.join)
  return _internal_join();
}
inline void Push::unsafe_arena_set_allocated_join(::centrifugal::centrifugo::unistream::Join* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.join_);
  }
  _impl_.join_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Join*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:centrifugal.centrifugo.unistream.Push.join)
}
inline ::centrifugal::centrifugo::unistream::Join* Push::release_join() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::centrifugal::centrifugo::unistream::Join* released = _impl_.join_;
  _impl_.join_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::centrifugal::centrifugo::unistream::Join* Push::unsafe_arena_release_join() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Push.join)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::centrifugal::centrifugo::unistream::Join* temp = _impl_.join_;
  _impl_.join_ = nullptr;
  return temp;
}
inline ::centrifugal::centrifugo::unistream::Join* Push::_internal_mutable_join() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.join_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::centrifugal::centrifugo::unistream::Join>(GetArena());
    _impl_.join_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Join*>(p);
  }
  return _impl_.join_;
}
inline ::centrifugal::centrifugo::unistream::Join* Push::mutable_join() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::centrifugal::centrifugo::unistream::Join* _msg = _internal_mutable_join();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Push.join)
  return _msg;
}
inline void Push::set_allocated_join(::centrifugal::centrifugo::unistream::Join* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.join_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.join_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Join*>(value);
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Push.join)
}

// .centrifugal.centrifugo.unistream.Leave leave = 6;
inline bool Push::has_leave() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.leave_ != nullptr);
  return value;
}
inline void Push::clear_leave() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.leave_ != nullptr) _impl_.leave_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::centrifugal::centrifugo::unistream::Leave& Push::_internal_leave() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::centrifugal::centrifugo::unistream::Leave* p = _impl_.leave_;
  return p != nullptr ? *p : reinterpret_cast<const ::centrifugal::centrifugo::unistream::Leave&>(::centrifugal::centrifugo::unistream::_Leave_default_instance_);
}
inline const ::centrifugal::centrifugo::unistream::Leave& Push::leave() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Push.leave)
  return _internal_leave();
}
inline void Push::unsafe_arena_set_allocated_leave(::centrifugal::centrifugo::unistream::Leave* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.leave_);
  }
  _impl_.leave_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Leave*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:centrifugal.centrifugo.unistream.Push.leave)
}
inline ::centrifugal::centrifugo::unistream::Leave* Push::release_leave() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::centrifugal::centrifugo::unistream::Leave* released = _impl_.leave_;
  _impl_.leave_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::centrifugal::centrifugo::unistream::Leave* Push::unsafe_arena_release_leave() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Push.leave)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::centrifugal::centrifugo::unistream::Leave* temp = _impl_.leave_;
  _impl_.leave_ = nullptr;
  return temp;
}
inline ::centrifugal::centrifugo::unistream::Leave* Push::_internal_mutable_leave() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.leave_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::centrifugal::centrifugo::unistream::Leave>(GetArena());
    _impl_.leave_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Leave*>(p);
  }
  return _impl_.leave_;
}
inline ::centrifugal::centrifugo::unistream::Leave* Push::mutable_leave() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::centrifugal::centrifugo::unistream::Leave* _msg = _internal_mutable_leave();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Push.leave)
  return _msg;
}
inline void Push::set_allocated_leave(::centrifugal::centrifugo::unistream::Leave* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.leave_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.leave_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Leave*>(value);
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Push.leave)
}

// .centrifugal.centrifugo.unistream.Unsubscribe unsubscribe = 7;
inline bool Push::has_unsubscribe() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.unsubscribe_ != nullptr);
  return value;
}
inline void Push::clear_unsubscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.unsubscribe_ != nullptr) _impl_.unsubscribe_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::centrifugal::centrifugo::unistream::Unsubscribe& Push::_internal_unsubscribe() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::centrifugal::centrifugo::unistream::Unsubscribe* p = _impl_.unsubscribe_;
  return p != nullptr ? *p : reinterpret_cast<const ::centrifugal::centrifugo::unistream::Unsubscribe&>(::centrifugal::centrifugo::unistream::_Unsubscribe_default_instance_);
}
inline const ::centrifugal::centrifugo::unistream::Unsubscribe& Push::unsubscribe() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Push.unsubscribe)
  return _internal_unsubscribe();
}
inline void Push::unsafe_arena_set_allocated_unsubscribe(::centrifugal::centrifugo::unistream::Unsubscribe* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.unsubscribe_);
  }
  _impl_.unsubscribe_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Unsubscribe*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:centrifugal.centrifugo.unistream.Push.unsubscribe)
}
inline ::centrifugal::centrifugo::unistream::Unsubscribe* Push::release_unsubscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::centrifugal::centrifugo::unistream::Unsubscribe* released = _impl_.unsubscribe_;
  _impl_.unsubscribe_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::centrifugal::centrifugo::unistream::Unsubscribe* Push::unsafe_arena_release_unsubscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Push.unsubscribe)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::centrifugal::centrifugo::unistream::Unsubscribe* temp = _impl_.unsubscribe_;
  _impl_.unsubscribe_ = nullptr;
  return temp;
}
inline ::centrifugal::centrifugo::unistream::Unsubscribe* Push::_internal_mutable_unsubscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.unsubscribe_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::centrifugal::centrifugo::unistream::Unsubscribe>(GetArena());
    _impl_.unsubscribe_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Unsubscribe*>(p);
  }
  return _impl_.unsubscribe_;
}
inline ::centrifugal::centrifugo::unistream::Unsubscribe* Push::mutable_unsubscribe() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::centrifugal::centrifugo::unistream::Unsubscribe* _msg = _internal_mutable_unsubscribe();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Push.unsubscribe)
  return _msg;
}
inline void Push::set_allocated_unsubscribe(::centrifugal::centrifugo::unistream::Unsubscribe* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.unsubscribe_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.unsubscribe_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Unsubscribe*>(value);
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Push.unsubscribe)
}

// .centrifugal.centrifugo.unistream.Message message = 8;
inline bool Push::has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_ != nullptr);
  return value;
}
inline void Push::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_ != nullptr) _impl_.message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::centrifugal::centrifugo::unistream::Message& Push::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::centrifugal::centrifugo::unistream::Message* p = _impl_.message_;
  return p != nullptr ? *p : reinterpret_cast<const ::centrifugal::centrifugo::unistream::Message&>(::centrifugal::centrifugo::unistream::_Message_default_instance_);
}
inline const ::centrifugal::centrifugo::unistream::Message& Push::message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Push.message)
  return _internal_message();
}
inline void Push::unsafe_arena_set_allocated_message(::centrifugal::centrifugo::unistream::Message* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_);
  }
  _impl_.message_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Message*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:centrifugal.centrifugo.unistream.Push.message)
}
inline ::centrifugal::centrifugo::unistream::Message* Push::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::centrifugal::centrifugo::unistream::Message* released = _impl_.message_;
  _impl_.message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::centrifugal::centrifugo::unistream::Message* Push::unsafe_arena_release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Push.message)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::centrifugal::centrifugo::unistream::Message* temp = _impl_.message_;
  _impl_.message_ = nullptr;
  return temp;
}
inline ::centrifugal::centrifugo::unistream::Message* Push::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::centrifugal::centrifugo::unistream::Message>(GetArena());
    _impl_.message_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Message*>(p);
  }
  return _impl_.message_;
}
inline ::centrifugal::centrifugo::unistream::Message* Push::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::centrifugal::centrifugo::unistream::Message* _msg = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Push.message)
  return _msg;
}
inline void Push::set_allocated_message(::centrifugal::centrifugo::unistream::Message* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.message_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Message*>(value);
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Push.message)
}

// .centrifugal.centrifugo.unistream.Subscribe subscribe = 9;
inline bool Push::has_subscribe() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.subscribe_ != nullptr);
  return value;
}
inline void Push::clear_subscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.subscribe_ != nullptr) _impl_.subscribe_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::centrifugal::centrifugo::unistream::Subscribe& Push::_internal_subscribe() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::centrifugal::centrifugo::unistream::Subscribe* p = _impl_.subscribe_;
  return p != nullptr ? *p : reinterpret_cast<const ::centrifugal::centrifugo::unistream::Subscribe&>(::centrifugal::centrifugo::unistream::_Subscribe_default_instance_);
}
inline const ::centrifugal::centrifugo::unistream::Subscribe& Push::subscribe() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Push.subscribe)
  return _internal_subscribe();
}
inline void Push::unsafe_arena_set_allocated_subscribe(::centrifugal::centrifugo::unistream::Subscribe* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.subscribe_);
  }
  _impl_.subscribe_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Subscribe*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:centrifugal.centrifugo.unistream.Push.subscribe)
}
inline ::centrifugal::centrifugo::unistream::Subscribe* Push::release_subscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::centrifugal::centrifugo::unistream::Subscribe* released = _impl_.subscribe_;
  _impl_.subscribe_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::centrifugal::centrifugo::unistream::Subscribe* Push::unsafe_arena_release_subscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Push.subscribe)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::centrifugal::centrifugo::unistream::Subscribe* temp = _impl_.subscribe_;
  _impl_.subscribe_ = nullptr;
  return temp;
}
inline ::centrifugal::centrifugo::unistream::Subscribe* Push::_internal_mutable_subscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.subscribe_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::centrifugal::centrifugo::unistream::Subscribe>(GetArena());
    _impl_.subscribe_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Subscribe*>(p);
  }
  return _impl_.subscribe_;
}
inline ::centrifugal::centrifugo::unistream::Subscribe* Push::mutable_subscribe() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::centrifugal::centrifugo::unistream::Subscribe* _msg = _internal_mutable_subscribe();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Push.subscribe)
  return _msg;
}
inline void Push::set_allocated_subscribe(::centrifugal::centrifugo::unistream::Subscribe* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.subscribe_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.subscribe_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Subscribe*>(value);
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Push.subscribe)
}

// .centrifugal.centrifugo.unistream.Connect connect = 10;
inline bool Push::has_connect() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.connect_ != nullptr);
  return value;
}
inline void Push::clear_connect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.connect_ != nullptr) _impl_.connect_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::centrifugal::centrifugo::unistream::Connect& Push::_internal_connect() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::centrifugal::centrifugo::unistream::Connect* p = _impl_.connect_;
  return p != nullptr ? *p : reinterpret_cast<const ::centrifugal::centrifugo::unistream::Connect&>(::centrifugal::centrifugo::unistream::_Connect_default_instance_);
}
inline const ::centrifugal::centrifugo::unistream::Connect& Push::connect() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Push.connect)
  return _internal_connect();
}
inline void Push::unsafe_arena_set_allocated_connect(::centrifugal::centrifugo::unistream::Connect* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.connect_);
  }
  _impl_.connect_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Connect*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:centrifugal.centrifugo.unistream.Push.connect)
}
inline ::centrifugal::centrifugo::unistream::Connect* Push::release_connect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::centrifugal::centrifugo::unistream::Connect* released = _impl_.connect_;
  _impl_.connect_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::centrifugal::centrifugo::unistream::Connect* Push::unsafe_arena_release_connect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Push.connect)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::centrifugal::centrifugo::unistream::Connect* temp = _impl_.connect_;
  _impl_.connect_ = nullptr;
  return temp;
}
inline ::centrifugal::centrifugo::unistream::Connect* Push::_internal_mutable_connect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.connect_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::centrifugal::centrifugo::unistream::Connect>(GetArena());
    _impl_.connect_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Connect*>(p);
  }
  return _impl_.connect_;
}
inline ::centrifugal::centrifugo::unistream::Connect* Push::mutable_connect() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::centrifugal::centrifugo::unistream::Connect* _msg = _internal_mutable_connect();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Push.connect)
  return _msg;
}
inline void Push::set_allocated_connect(::centrifugal::centrifugo::unistream::Connect* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.connect_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.connect_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Connect*>(value);
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Push.connect)
}

// .centrifugal.centrifugo.unistream.Disconnect disconnect = 11;
inline bool Push::has_disconnect() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.disconnect_ != nullptr);
  return value;
}
inline void Push::clear_disconnect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.disconnect_ != nullptr) _impl_.disconnect_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const ::centrifugal::centrifugo::unistream::Disconnect& Push::_internal_disconnect() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::centrifugal::centrifugo::unistream::Disconnect* p = _impl_.disconnect_;
  return p != nullptr ? *p : reinterpret_cast<const ::centrifugal::centrifugo::unistream::Disconnect&>(::centrifugal::centrifugo::unistream::_Disconnect_default_instance_);
}
inline const ::centrifugal::centrifugo::unistream::Disconnect& Push::disconnect() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Push.disconnect)
  return _internal_disconnect();
}
inline void Push::unsafe_arena_set_allocated_disconnect(::centrifugal::centrifugo::unistream::Disconnect* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.disconnect_);
  }
  _impl_.disconnect_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Disconnect*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:centrifugal.centrifugo.unistream.Push.disconnect)
}
inline ::centrifugal::centrifugo::unistream::Disconnect* Push::release_disconnect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::centrifugal::centrifugo::unistream::Disconnect* released = _impl_.disconnect_;
  _impl_.disconnect_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::centrifugal::centrifugo::unistream::Disconnect* Push::unsafe_arena_release_disconnect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Push.disconnect)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::centrifugal::centrifugo::unistream::Disconnect* temp = _impl_.disconnect_;
  _impl_.disconnect_ = nullptr;
  return temp;
}
inline ::centrifugal::centrifugo::unistream::Disconnect* Push::_internal_mutable_disconnect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.disconnect_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::centrifugal::centrifugo::unistream::Disconnect>(GetArena());
    _impl_.disconnect_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Disconnect*>(p);
  }
  return _impl_.disconnect_;
}
inline ::centrifugal::centrifugo::unistream::Disconnect* Push::mutable_disconnect() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::centrifugal::centrifugo::unistream::Disconnect* _msg = _internal_mutable_disconnect();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Push.disconnect)
  return _msg;
}
inline void Push::set_allocated_disconnect(::centrifugal::centrifugo::unistream::Disconnect* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.disconnect_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.disconnect_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Disconnect*>(value);
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Push.disconnect)
}

// .centrifugal.centrifugo.unistream.Refresh refresh = 12;
inline bool Push::has_refresh() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.refresh_ != nullptr);
  return value;
}
inline void Push::clear_refresh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.refresh_ != nullptr) _impl_.refresh_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const ::centrifugal::centrifugo::unistream::Refresh& Push::_internal_refresh() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::centrifugal::centrifugo::unistream::Refresh* p = _impl_.refresh_;
  return p != nullptr ? *p : reinterpret_cast<const ::centrifugal::centrifugo::unistream::Refresh&>(::centrifugal::centrifugo::unistream::_Refresh_default_instance_);
}
inline const ::centrifugal::centrifugo::unistream::Refresh& Push::refresh() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Push.refresh)
  return _internal_refresh();
}
inline void Push::unsafe_arena_set_allocated_refresh(::centrifugal::centrifugo::unistream::Refresh* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.refresh_);
  }
  _impl_.refresh_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Refresh*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:centrifugal.centrifugo.unistream.Push.refresh)
}
inline ::centrifugal::centrifugo::unistream::Refresh* Push::release_refresh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::centrifugal::centrifugo::unistream::Refresh* released = _impl_.refresh_;
  _impl_.refresh_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::centrifugal::centrifugo::unistream::Refresh* Push::unsafe_arena_release_refresh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Push.refresh)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::centrifugal::centrifugo::unistream::Refresh* temp = _impl_.refresh_;
  _impl_.refresh_ = nullptr;
  return temp;
}
inline ::centrifugal::centrifugo::unistream::Refresh* Push::_internal_mutable_refresh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.refresh_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::centrifugal::centrifugo::unistream::Refresh>(GetArena());
    _impl_.refresh_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Refresh*>(p);
  }
  return _impl_.refresh_;
}
inline ::centrifugal::centrifugo::unistream::Refresh* Push::mutable_refresh() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::centrifugal::centrifugo::unistream::Refresh* _msg = _internal_mutable_refresh();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Push.refresh)
  return _msg;
}
inline void Push::set_allocated_refresh(::centrifugal::centrifugo::unistream::Refresh* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.refresh_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.refresh_ = reinterpret_cast<::centrifugal::centrifugo::unistream::Refresh*>(value);
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Push.refresh)
}

// -------------------------------------------------------------------

// ClientInfo

// string user = 1;
inline void ClientInfo::clear_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_.ClearToEmpty();
}
inline const std::string& ClientInfo::user() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.ClientInfo.user)
  return _internal_user();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClientInfo::set_user(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.ClientInfo.user)
}
inline std::string* ClientInfo::mutable_user() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.ClientInfo.user)
  return _s;
}
inline const std::string& ClientInfo::_internal_user() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_.Get();
}
inline void ClientInfo::_internal_set_user(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_.Set(value, GetArena());
}
inline std::string* ClientInfo::_internal_mutable_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.user_.Mutable( GetArena());
}
inline std::string* ClientInfo::release_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.ClientInfo.user)
  return _impl_.user_.Release();
}
inline void ClientInfo::set_allocated_user(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.user_.IsDefault()) {
    _impl_.user_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.ClientInfo.user)
}

// string client = 2;
inline void ClientInfo::clear_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_.ClearToEmpty();
}
inline const std::string& ClientInfo::client() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.ClientInfo.client)
  return _internal_client();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClientInfo::set_client(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.ClientInfo.client)
}
inline std::string* ClientInfo::mutable_client() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.ClientInfo.client)
  return _s;
}
inline const std::string& ClientInfo::_internal_client() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_.Get();
}
inline void ClientInfo::_internal_set_client(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_.Set(value, GetArena());
}
inline std::string* ClientInfo::_internal_mutable_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_.Mutable( GetArena());
}
inline std::string* ClientInfo::release_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.ClientInfo.client)
  return _impl_.client_.Release();
}
inline void ClientInfo::set_allocated_client(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_.IsDefault()) {
    _impl_.client_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.ClientInfo.client)
}

// bytes conn_info = 3;
inline void ClientInfo::clear_conn_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conn_info_.ClearToEmpty();
}
inline const std::string& ClientInfo::conn_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.ClientInfo.conn_info)
  return _internal_conn_info();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClientInfo::set_conn_info(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conn_info_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.ClientInfo.conn_info)
}
inline std::string* ClientInfo::mutable_conn_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_conn_info();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.ClientInfo.conn_info)
  return _s;
}
inline const std::string& ClientInfo::_internal_conn_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conn_info_.Get();
}
inline void ClientInfo::_internal_set_conn_info(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conn_info_.Set(value, GetArena());
}
inline std::string* ClientInfo::_internal_mutable_conn_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.conn_info_.Mutable( GetArena());
}
inline std::string* ClientInfo::release_conn_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.ClientInfo.conn_info)
  return _impl_.conn_info_.Release();
}
inline void ClientInfo::set_allocated_conn_info(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conn_info_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.conn_info_.IsDefault()) {
    _impl_.conn_info_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.ClientInfo.conn_info)
}

// bytes chan_info = 4;
inline void ClientInfo::clear_chan_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_info_.ClearToEmpty();
}
inline const std::string& ClientInfo::chan_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.ClientInfo.chan_info)
  return _internal_chan_info();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClientInfo::set_chan_info(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_info_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.ClientInfo.chan_info)
}
inline std::string* ClientInfo::mutable_chan_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_chan_info();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.ClientInfo.chan_info)
  return _s;
}
inline const std::string& ClientInfo::_internal_chan_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_info_.Get();
}
inline void ClientInfo::_internal_set_chan_info(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_info_.Set(value, GetArena());
}
inline std::string* ClientInfo::_internal_mutable_chan_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.chan_info_.Mutable( GetArena());
}
inline std::string* ClientInfo::release_chan_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.ClientInfo.chan_info)
  return _impl_.chan_info_.Release();
}
inline void ClientInfo::set_allocated_chan_info(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_info_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.chan_info_.IsDefault()) {
    _impl_.chan_info_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.ClientInfo.chan_info)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Publication

// bytes data = 4;
inline void Publication::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& Publication::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Publication.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Publication::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Publication.data)
}
inline std::string* Publication::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Publication.data)
  return _s;
}
inline const std::string& Publication::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void Publication::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* Publication::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* Publication::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Publication.data)
  return _impl_.data_.Release();
}
inline void Publication::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Publication.data)
}

// .centrifugal.centrifugo.unistream.ClientInfo info = 5;
inline bool Publication::has_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_ != nullptr);
  return value;
}
inline void Publication::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::centrifugal::centrifugo::unistream::ClientInfo& Publication::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::centrifugal::centrifugo::unistream::ClientInfo* p = _impl_.info_;
  return p != nullptr ? *p : reinterpret_cast<const ::centrifugal::centrifugo::unistream::ClientInfo&>(::centrifugal::centrifugo::unistream::_ClientInfo_default_instance_);
}
inline const ::centrifugal::centrifugo::unistream::ClientInfo& Publication::info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Publication.info)
  return _internal_info();
}
inline void Publication::unsafe_arena_set_allocated_info(::centrifugal::centrifugo::unistream::ClientInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_);
  }
  _impl_.info_ = reinterpret_cast<::centrifugal::centrifugo::unistream::ClientInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:centrifugal.centrifugo.unistream.Publication.info)
}
inline ::centrifugal::centrifugo::unistream::ClientInfo* Publication::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::centrifugal::centrifugo::unistream::ClientInfo* released = _impl_.info_;
  _impl_.info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::centrifugal::centrifugo::unistream::ClientInfo* Publication::unsafe_arena_release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Publication.info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::centrifugal::centrifugo::unistream::ClientInfo* temp = _impl_.info_;
  _impl_.info_ = nullptr;
  return temp;
}
inline ::centrifugal::centrifugo::unistream::ClientInfo* Publication::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::centrifugal::centrifugo::unistream::ClientInfo>(GetArena());
    _impl_.info_ = reinterpret_cast<::centrifugal::centrifugo::unistream::ClientInfo*>(p);
  }
  return _impl_.info_;
}
inline ::centrifugal::centrifugo::unistream::ClientInfo* Publication::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::centrifugal::centrifugo::unistream::ClientInfo* _msg = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Publication.info)
  return _msg;
}
inline void Publication::set_allocated_info(::centrifugal::centrifugo::unistream::ClientInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.info_ = reinterpret_cast<::centrifugal::centrifugo::unistream::ClientInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Publication.info)
}

// uint64 offset = 6;
inline void Publication::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = ::uint64_t{0u};
}
inline ::uint64_t Publication::offset() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Publication.offset)
  return _internal_offset();
}
inline void Publication::set_offset(::uint64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Publication.offset)
}
inline ::uint64_t Publication::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void Publication::_internal_set_offset(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// map<string, string> tags = 7;
inline int Publication::_internal_tags_size() const {
  return _internal_tags().size();
}
inline int Publication::tags_size() const {
  return _internal_tags_size();
}
inline void Publication::clear_tags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tags_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Publication::_internal_tags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tags_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Publication::tags() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:centrifugal.centrifugo.unistream.Publication.tags)
  return _internal_tags();
}
inline ::google::protobuf::Map<std::string, std::string>* Publication::_internal_mutable_tags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tags_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Publication::mutable_tags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:centrifugal.centrifugo.unistream.Publication.tags)
  return _internal_mutable_tags();
}

// -------------------------------------------------------------------

// Join

// .centrifugal.centrifugo.unistream.ClientInfo info = 1;
inline bool Join::has_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_ != nullptr);
  return value;
}
inline void Join::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::centrifugal::centrifugo::unistream::ClientInfo& Join::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::centrifugal::centrifugo::unistream::ClientInfo* p = _impl_.info_;
  return p != nullptr ? *p : reinterpret_cast<const ::centrifugal::centrifugo::unistream::ClientInfo&>(::centrifugal::centrifugo::unistream::_ClientInfo_default_instance_);
}
inline const ::centrifugal::centrifugo::unistream::ClientInfo& Join::info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Join.info)
  return _internal_info();
}
inline void Join::unsafe_arena_set_allocated_info(::centrifugal::centrifugo::unistream::ClientInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_);
  }
  _impl_.info_ = reinterpret_cast<::centrifugal::centrifugo::unistream::ClientInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:centrifugal.centrifugo.unistream.Join.info)
}
inline ::centrifugal::centrifugo::unistream::ClientInfo* Join::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::centrifugal::centrifugo::unistream::ClientInfo* released = _impl_.info_;
  _impl_.info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::centrifugal::centrifugo::unistream::ClientInfo* Join::unsafe_arena_release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Join.info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::centrifugal::centrifugo::unistream::ClientInfo* temp = _impl_.info_;
  _impl_.info_ = nullptr;
  return temp;
}
inline ::centrifugal::centrifugo::unistream::ClientInfo* Join::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::centrifugal::centrifugo::unistream::ClientInfo>(GetArena());
    _impl_.info_ = reinterpret_cast<::centrifugal::centrifugo::unistream::ClientInfo*>(p);
  }
  return _impl_.info_;
}
inline ::centrifugal::centrifugo::unistream::ClientInfo* Join::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::centrifugal::centrifugo::unistream::ClientInfo* _msg = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Join.info)
  return _msg;
}
inline void Join::set_allocated_info(::centrifugal::centrifugo::unistream::ClientInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.info_ = reinterpret_cast<::centrifugal::centrifugo::unistream::ClientInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Join.info)
}

// -------------------------------------------------------------------

// Leave

// .centrifugal.centrifugo.unistream.ClientInfo info = 1;
inline bool Leave::has_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_ != nullptr);
  return value;
}
inline void Leave::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::centrifugal::centrifugo::unistream::ClientInfo& Leave::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::centrifugal::centrifugo::unistream::ClientInfo* p = _impl_.info_;
  return p != nullptr ? *p : reinterpret_cast<const ::centrifugal::centrifugo::unistream::ClientInfo&>(::centrifugal::centrifugo::unistream::_ClientInfo_default_instance_);
}
inline const ::centrifugal::centrifugo::unistream::ClientInfo& Leave::info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Leave.info)
  return _internal_info();
}
inline void Leave::unsafe_arena_set_allocated_info(::centrifugal::centrifugo::unistream::ClientInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_);
  }
  _impl_.info_ = reinterpret_cast<::centrifugal::centrifugo::unistream::ClientInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:centrifugal.centrifugo.unistream.Leave.info)
}
inline ::centrifugal::centrifugo::unistream::ClientInfo* Leave::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::centrifugal::centrifugo::unistream::ClientInfo* released = _impl_.info_;
  _impl_.info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::centrifugal::centrifugo::unistream::ClientInfo* Leave::unsafe_arena_release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Leave.info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::centrifugal::centrifugo::unistream::ClientInfo* temp = _impl_.info_;
  _impl_.info_ = nullptr;
  return temp;
}
inline ::centrifugal::centrifugo::unistream::ClientInfo* Leave::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::centrifugal::centrifugo::unistream::ClientInfo>(GetArena());
    _impl_.info_ = reinterpret_cast<::centrifugal::centrifugo::unistream::ClientInfo*>(p);
  }
  return _impl_.info_;
}
inline ::centrifugal::centrifugo::unistream::ClientInfo* Leave::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::centrifugal::centrifugo::unistream::ClientInfo* _msg = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Leave.info)
  return _msg;
}
inline void Leave::set_allocated_info(::centrifugal::centrifugo::unistream::ClientInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.info_ = reinterpret_cast<::centrifugal::centrifugo::unistream::ClientInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Leave.info)
}

// -------------------------------------------------------------------

// Unsubscribe

// uint32 code = 2;
inline void Unsubscribe::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0u;
}
inline ::uint32_t Unsubscribe::code() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Unsubscribe.code)
  return _internal_code();
}
inline void Unsubscribe::set_code(::uint32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Unsubscribe.code)
}
inline ::uint32_t Unsubscribe::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline void Unsubscribe::_internal_set_code(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string reason = 3;
inline void Unsubscribe::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& Unsubscribe::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Unsubscribe.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Unsubscribe::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Unsubscribe.reason)
}
inline std::string* Unsubscribe::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Unsubscribe.reason)
  return _s;
}
inline const std::string& Unsubscribe::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void Unsubscribe::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* Unsubscribe::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* Unsubscribe::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Unsubscribe.reason)
  return _impl_.reason_.Release();
}
inline void Unsubscribe::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reason_.IsDefault()) {
    _impl_.reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Unsubscribe.reason)
}

// -------------------------------------------------------------------

// Subscribe

// bool recoverable = 1;
inline void Subscribe::clear_recoverable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recoverable_ = false;
}
inline bool Subscribe::recoverable() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Subscribe.recoverable)
  return _internal_recoverable();
}
inline void Subscribe::set_recoverable(bool value) {
  _internal_set_recoverable(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Subscribe.recoverable)
}
inline bool Subscribe::_internal_recoverable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recoverable_;
}
inline void Subscribe::_internal_set_recoverable(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recoverable_ = value;
}

// string epoch = 4;
inline void Subscribe::clear_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_.ClearToEmpty();
}
inline const std::string& Subscribe::epoch() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Subscribe.epoch)
  return _internal_epoch();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Subscribe::set_epoch(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Subscribe.epoch)
}
inline std::string* Subscribe::mutable_epoch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_epoch();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Subscribe.epoch)
  return _s;
}
inline const std::string& Subscribe::_internal_epoch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.epoch_.Get();
}
inline void Subscribe::_internal_set_epoch(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_.Set(value, GetArena());
}
inline std::string* Subscribe::_internal_mutable_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.epoch_.Mutable( GetArena());
}
inline std::string* Subscribe::release_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Subscribe.epoch)
  return _impl_.epoch_.Release();
}
inline void Subscribe::set_allocated_epoch(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.epoch_.IsDefault()) {
    _impl_.epoch_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Subscribe.epoch)
}

// uint64 offset = 5;
inline void Subscribe::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = ::uint64_t{0u};
}
inline ::uint64_t Subscribe::offset() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Subscribe.offset)
  return _internal_offset();
}
inline void Subscribe::set_offset(::uint64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Subscribe.offset)
}
inline ::uint64_t Subscribe::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void Subscribe::_internal_set_offset(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// bool positioned = 6;
inline void Subscribe::clear_positioned() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.positioned_ = false;
}
inline bool Subscribe::positioned() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Subscribe.positioned)
  return _internal_positioned();
}
inline void Subscribe::set_positioned(bool value) {
  _internal_set_positioned(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Subscribe.positioned)
}
inline bool Subscribe::_internal_positioned() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.positioned_;
}
inline void Subscribe::_internal_set_positioned(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.positioned_ = value;
}

// bytes data = 7;
inline void Subscribe::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& Subscribe::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Subscribe.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Subscribe::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Subscribe.data)
}
inline std::string* Subscribe::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Subscribe.data)
  return _s;
}
inline const std::string& Subscribe::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void Subscribe::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* Subscribe::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* Subscribe::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Subscribe.data)
  return _impl_.data_.Release();
}
inline void Subscribe::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Subscribe.data)
}

// -------------------------------------------------------------------

// Message

// bytes data = 1;
inline void Message::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& Message::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Message.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Message.data)
}
inline std::string* Message::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Message.data)
  return _s;
}
inline const std::string& Message::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void Message::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* Message::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* Message::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Message.data)
  return _impl_.data_.Release();
}
inline void Message::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Message.data)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Connect

// string client = 1;
inline void Connect::clear_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_.ClearToEmpty();
}
inline const std::string& Connect::client() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Connect.client)
  return _internal_client();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Connect::set_client(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Connect.client)
}
inline std::string* Connect::mutable_client() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Connect.client)
  return _s;
}
inline const std::string& Connect::_internal_client() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_.Get();
}
inline void Connect::_internal_set_client(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_.Set(value, GetArena());
}
inline std::string* Connect::_internal_mutable_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_.Mutable( GetArena());
}
inline std::string* Connect::release_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Connect.client)
  return _impl_.client_.Release();
}
inline void Connect::set_allocated_client(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_.IsDefault()) {
    _impl_.client_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Connect.client)
}

// string version = 2;
inline void Connect::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& Connect::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Connect.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Connect::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Connect.version)
}
inline std::string* Connect::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Connect.version)
  return _s;
}
inline const std::string& Connect::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void Connect::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* Connect::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* Connect::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Connect.version)
  return _impl_.version_.Release();
}
inline void Connect::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Connect.version)
}

// bytes data = 3;
inline void Connect::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& Connect::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Connect.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Connect::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Connect.data)
}
inline std::string* Connect::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Connect.data)
  return _s;
}
inline const std::string& Connect::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void Connect::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* Connect::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* Connect::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Connect.data)
  return _impl_.data_.Release();
}
inline void Connect::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Connect.data)
}

// map<string, .centrifugal.centrifugo.unistream.SubscribeResult> subs = 4;
inline int Connect::_internal_subs_size() const {
  return _internal_subs().size();
}
inline int Connect::subs_size() const {
  return _internal_subs_size();
}
inline void Connect::clear_subs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subs_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeResult>& Connect::_internal_subs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subs_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeResult>& Connect::subs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:centrifugal.centrifugo.unistream.Connect.subs)
  return _internal_subs();
}
inline ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeResult>* Connect::_internal_mutable_subs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.subs_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::centrifugal::centrifugo::unistream::SubscribeResult>* Connect::mutable_subs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:centrifugal.centrifugo.unistream.Connect.subs)
  return _internal_mutable_subs();
}

// bool expires = 5;
inline void Connect::clear_expires() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_ = false;
}
inline bool Connect::expires() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Connect.expires)
  return _internal_expires();
}
inline void Connect::set_expires(bool value) {
  _internal_set_expires(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Connect.expires)
}
inline bool Connect::_internal_expires() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expires_;
}
inline void Connect::_internal_set_expires(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_ = value;
}

// uint32 ttl = 6;
inline void Connect::clear_ttl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = 0u;
}
inline ::uint32_t Connect::ttl() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Connect.ttl)
  return _internal_ttl();
}
inline void Connect::set_ttl(::uint32_t value) {
  _internal_set_ttl(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Connect.ttl)
}
inline ::uint32_t Connect::_internal_ttl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ttl_;
}
inline void Connect::_internal_set_ttl(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = value;
}

// uint32 ping = 7;
inline void Connect::clear_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_ = 0u;
}
inline ::uint32_t Connect::ping() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Connect.ping)
  return _internal_ping();
}
inline void Connect::set_ping(::uint32_t value) {
  _internal_set_ping(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Connect.ping)
}
inline ::uint32_t Connect::_internal_ping() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ping_;
}
inline void Connect::_internal_set_ping(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_ = value;
}

// bool pong = 8;
inline void Connect::clear_pong() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pong_ = false;
}
inline bool Connect::pong() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Connect.pong)
  return _internal_pong();
}
inline void Connect::set_pong(bool value) {
  _internal_set_pong(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Connect.pong)
}
inline bool Connect::_internal_pong() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pong_;
}
inline void Connect::_internal_set_pong(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pong_ = value;
}

// string session = 9;
inline void Connect::clear_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_.ClearToEmpty();
}
inline const std::string& Connect::session() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Connect.session)
  return _internal_session();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Connect::set_session(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Connect.session)
}
inline std::string* Connect::mutable_session() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Connect.session)
  return _s;
}
inline const std::string& Connect::_internal_session() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_.Get();
}
inline void Connect::_internal_set_session(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_.Set(value, GetArena());
}
inline std::string* Connect::_internal_mutable_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.session_.Mutable( GetArena());
}
inline std::string* Connect::release_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Connect.session)
  return _impl_.session_.Release();
}
inline void Connect::set_allocated_session(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.session_.IsDefault()) {
    _impl_.session_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Connect.session)
}

// string node = 10;
inline void Connect::clear_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_.ClearToEmpty();
}
inline const std::string& Connect::node() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Connect.node)
  return _internal_node();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Connect::set_node(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Connect.node)
}
inline std::string* Connect::mutable_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Connect.node)
  return _s;
}
inline const std::string& Connect::_internal_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_.Get();
}
inline void Connect::_internal_set_node(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_.Set(value, GetArena());
}
inline std::string* Connect::_internal_mutable_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_.Mutable( GetArena());
}
inline std::string* Connect::release_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Connect.node)
  return _impl_.node_.Release();
}
inline void Connect::set_allocated_node(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.node_.IsDefault()) {
    _impl_.node_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Connect.node)
}

// -------------------------------------------------------------------

// Disconnect

// uint32 code = 1;
inline void Disconnect::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0u;
}
inline ::uint32_t Disconnect::code() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Disconnect.code)
  return _internal_code();
}
inline void Disconnect::set_code(::uint32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Disconnect.code)
}
inline ::uint32_t Disconnect::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline void Disconnect::_internal_set_code(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string reason = 2;
inline void Disconnect::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& Disconnect::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Disconnect.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Disconnect::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Disconnect.reason)
}
inline std::string* Disconnect::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.Disconnect.reason)
  return _s;
}
inline const std::string& Disconnect::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void Disconnect::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* Disconnect::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* Disconnect::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.Disconnect.reason)
  return _impl_.reason_.Release();
}
inline void Disconnect::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reason_.IsDefault()) {
    _impl_.reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.Disconnect.reason)
}

// bool reconnect = 3;
inline void Disconnect::clear_reconnect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reconnect_ = false;
}
inline bool Disconnect::reconnect() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Disconnect.reconnect)
  return _internal_reconnect();
}
inline void Disconnect::set_reconnect(bool value) {
  _internal_set_reconnect(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Disconnect.reconnect)
}
inline bool Disconnect::_internal_reconnect() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reconnect_;
}
inline void Disconnect::_internal_set_reconnect(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reconnect_ = value;
}

// -------------------------------------------------------------------

// Refresh

// bool expires = 1;
inline void Refresh::clear_expires() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_ = false;
}
inline bool Refresh::expires() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Refresh.expires)
  return _internal_expires();
}
inline void Refresh::set_expires(bool value) {
  _internal_set_expires(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Refresh.expires)
}
inline bool Refresh::_internal_expires() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expires_;
}
inline void Refresh::_internal_set_expires(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_ = value;
}

// uint32 ttl = 2;
inline void Refresh::clear_ttl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = 0u;
}
inline ::uint32_t Refresh::ttl() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.Refresh.ttl)
  return _internal_ttl();
}
inline void Refresh::set_ttl(::uint32_t value) {
  _internal_set_ttl(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.Refresh.ttl)
}
inline ::uint32_t Refresh::_internal_ttl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ttl_;
}
inline void Refresh::_internal_set_ttl(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = value;
}

// -------------------------------------------------------------------

// SubscribeResult

// bool expires = 1;
inline void SubscribeResult::clear_expires() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_ = false;
}
inline bool SubscribeResult::expires() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeResult.expires)
  return _internal_expires();
}
inline void SubscribeResult::set_expires(bool value) {
  _internal_set_expires(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.SubscribeResult.expires)
}
inline bool SubscribeResult::_internal_expires() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expires_;
}
inline void SubscribeResult::_internal_set_expires(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_ = value;
}

// uint32 ttl = 2;
inline void SubscribeResult::clear_ttl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = 0u;
}
inline ::uint32_t SubscribeResult::ttl() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeResult.ttl)
  return _internal_ttl();
}
inline void SubscribeResult::set_ttl(::uint32_t value) {
  _internal_set_ttl(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.SubscribeResult.ttl)
}
inline ::uint32_t SubscribeResult::_internal_ttl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ttl_;
}
inline void SubscribeResult::_internal_set_ttl(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = value;
}

// bool recoverable = 3;
inline void SubscribeResult::clear_recoverable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recoverable_ = false;
}
inline bool SubscribeResult::recoverable() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeResult.recoverable)
  return _internal_recoverable();
}
inline void SubscribeResult::set_recoverable(bool value) {
  _internal_set_recoverable(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.SubscribeResult.recoverable)
}
inline bool SubscribeResult::_internal_recoverable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recoverable_;
}
inline void SubscribeResult::_internal_set_recoverable(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recoverable_ = value;
}

// string epoch = 6;
inline void SubscribeResult::clear_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_.ClearToEmpty();
}
inline const std::string& SubscribeResult::epoch() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeResult.epoch)
  return _internal_epoch();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeResult::set_epoch(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.SubscribeResult.epoch)
}
inline std::string* SubscribeResult::mutable_epoch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_epoch();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.SubscribeResult.epoch)
  return _s;
}
inline const std::string& SubscribeResult::_internal_epoch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.epoch_.Get();
}
inline void SubscribeResult::_internal_set_epoch(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_.Set(value, GetArena());
}
inline std::string* SubscribeResult::_internal_mutable_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.epoch_.Mutable( GetArena());
}
inline std::string* SubscribeResult::release_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.SubscribeResult.epoch)
  return _impl_.epoch_.Release();
}
inline void SubscribeResult::set_allocated_epoch(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.epoch_.IsDefault()) {
    _impl_.epoch_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.SubscribeResult.epoch)
}

// repeated .centrifugal.centrifugo.unistream.Publication publications = 7;
inline int SubscribeResult::_internal_publications_size() const {
  return _internal_publications().size();
}
inline int SubscribeResult::publications_size() const {
  return _internal_publications_size();
}
inline void SubscribeResult::clear_publications() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.publications_.Clear();
}
inline ::centrifugal::centrifugo::unistream::Publication* SubscribeResult::mutable_publications(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.SubscribeResult.publications)
  return _internal_mutable_publications()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::centrifugal::centrifugo::unistream::Publication>* SubscribeResult::mutable_publications()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:centrifugal.centrifugo.unistream.SubscribeResult.publications)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_publications();
}
inline const ::centrifugal::centrifugo::unistream::Publication& SubscribeResult::publications(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeResult.publications)
  return _internal_publications().Get(index);
}
inline ::centrifugal::centrifugo::unistream::Publication* SubscribeResult::add_publications() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::centrifugal::centrifugo::unistream::Publication* _add = _internal_mutable_publications()->Add();
  // @@protoc_insertion_point(field_add:centrifugal.centrifugo.unistream.SubscribeResult.publications)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::centrifugal::centrifugo::unistream::Publication>& SubscribeResult::publications() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:centrifugal.centrifugo.unistream.SubscribeResult.publications)
  return _internal_publications();
}
inline const ::google::protobuf::RepeatedPtrField<::centrifugal::centrifugo::unistream::Publication>&
SubscribeResult::_internal_publications() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.publications_;
}
inline ::google::protobuf::RepeatedPtrField<::centrifugal::centrifugo::unistream::Publication>*
SubscribeResult::_internal_mutable_publications() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.publications_;
}

// bool recovered = 8;
inline void SubscribeResult::clear_recovered() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovered_ = false;
}
inline bool SubscribeResult::recovered() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeResult.recovered)
  return _internal_recovered();
}
inline void SubscribeResult::set_recovered(bool value) {
  _internal_set_recovered(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.SubscribeResult.recovered)
}
inline bool SubscribeResult::_internal_recovered() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recovered_;
}
inline void SubscribeResult::_internal_set_recovered(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovered_ = value;
}

// uint64 offset = 9;
inline void SubscribeResult::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeResult::offset() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeResult.offset)
  return _internal_offset();
}
inline void SubscribeResult::set_offset(::uint64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.SubscribeResult.offset)
}
inline ::uint64_t SubscribeResult::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void SubscribeResult::_internal_set_offset(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// bool positioned = 10;
inline void SubscribeResult::clear_positioned() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.positioned_ = false;
}
inline bool SubscribeResult::positioned() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeResult.positioned)
  return _internal_positioned();
}
inline void SubscribeResult::set_positioned(bool value) {
  _internal_set_positioned(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.SubscribeResult.positioned)
}
inline bool SubscribeResult::_internal_positioned() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.positioned_;
}
inline void SubscribeResult::_internal_set_positioned(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.positioned_ = value;
}

// bytes data = 11;
inline void SubscribeResult::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& SubscribeResult::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeResult.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeResult::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.SubscribeResult.data)
}
inline std::string* SubscribeResult::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:centrifugal.centrifugo.unistream.SubscribeResult.data)
  return _s;
}
inline const std::string& SubscribeResult::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void SubscribeResult::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* SubscribeResult::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* SubscribeResult::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:centrifugal.centrifugo.unistream.SubscribeResult.data)
  return _impl_.data_.Release();
}
inline void SubscribeResult::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:centrifugal.centrifugo.unistream.SubscribeResult.data)
}

// bool was_recovering = 12;
inline void SubscribeResult::clear_was_recovering() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.was_recovering_ = false;
}
inline bool SubscribeResult::was_recovering() const {
  // @@protoc_insertion_point(field_get:centrifugal.centrifugo.unistream.SubscribeResult.was_recovering)
  return _internal_was_recovering();
}
inline void SubscribeResult::set_was_recovering(bool value) {
  _internal_set_was_recovering(value);
  // @@protoc_insertion_point(field_set:centrifugal.centrifugo.unistream.SubscribeResult.was_recovering)
}
inline bool SubscribeResult::_internal_was_recovering() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.was_recovering_;
}
inline void SubscribeResult::_internal_set_was_recovering(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.was_recovering_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace unistream
}  // namespace centrifugo
}  // namespace centrifugal


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // unistream_2eproto_2epb_2eh
